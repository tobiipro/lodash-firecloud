{"version":3,"sources":["../../src/mixins-browser/event-target-observer.ts"],"names":[],"mappings":"gHAAA,wD;;;;;;;AAOO,MAAM,mBAAN,CAA8C;;;;;;;;;;AAUnD,EAAA,WAAW,CAAC,EAAD,EAA8B,8BATnC,SASmC,kCAPhC,EAOgC;AACvC,SAAK,GAAL,GAAW,EAAX;AACD;;AAED,EAAA,OAAO;AACL,EAAA,IADK;;;;AAKL,EAAA,OAAgC,GAAG,EAL9B;AAMC;AACN,QAAI;AACF,MAAA,MADE;AAEF,MAAA,IAFE;AAGA,IAAA,IAHJ;AAIA,QAAI,UAAU,GAAG,gBAAE,IAAF,CAAO,KAAK,MAAZ,EAAoB,UAAS,UAAT,EAAqB;AACxD,aAAO,UAAU,CAAC,MAAX,KAAsB,MAAtB;AACL,MAAA,UAAU,CAAC,IAAX,KAAoB,IADf;AAEL,MAAA,UAAU,CAAC,OAAX,KAAuB,OAAO,CAAC,OAFjC;AAGD,KAJgB,CAAjB;AAKA,QAAI,WAAW,GAAG,CAAC,gBAAE,WAAF,CAAc,UAAd,CAAnB;AACA,QAAI,WAAJ,EAAiB;AACf;AACD;AACD,QAAI,QAAQ,GAAI,CAAD,IAAoB;AACjC,UAAI,OAAO,GAAG;AACZ,MAAA,CADY,CAAd;;AAGA,WAAK,GAAL,CAAS,OAAT;AACD,KALD;AAMA,IAAA,MAAM,CAAC,gBAAP,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC,OAAxC;AACA,SAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,MAAA,MADe;AAEf,MAAA,IAFe;AAGf,MAAA,OAAO,EAAE,OAAO,CAAC,OAHF;AAIf,MAAA,QAJe,EAAjB;;AAMD;;AAED,EAAA,SAAS;AACP,EAAA,IADO;;;;AAKP,EAAA,OAA6B,GAAG,EALzB;AAMD;AACN,QAAI;AACF,MAAA,MADE;AAEF,MAAA,IAFE;AAGA,IAAA,IAHJ;AAIA,QAAI,UAAU,GAAG,gBAAE,IAAF,CAAO,KAAK,MAAZ,EAAoB,UAAS,UAAT,EAAqB;AACxD,aAAO,UAAU,CAAC,MAAX,KAAsB,MAAtB;AACL,MAAA,UAAU,CAAC,IAAX,KAAoB,IADf;AAEL,MAAA,UAAU,CAAC,OAAX,KAAuB,OAAO,CAAC,OAFjC;AAGD,KAJgB,CAAjB;AAKA,QAAI,WAAW,GAAG,CAAC,gBAAE,WAAF,CAAc,UAAd,CAAnB;AACA,QAAI,CAAC,WAAL,EAAkB;AAChB;AACD;AACD,IAAA,MAAM,CAAC,mBAAP,CAA2B,IAA3B,EAAiC,UAAU,CAAC,QAA5C,EAAsD,OAAtD;AACA;AACA,oBAAE,IAAF,CAAO,KAAK,MAAZ,EAAoB,UAApB;AACD;;AAED,EAAA,UAAU,GAAS;AACjB,oBAAE,OAAF,CAAU,KAAK,MAAf,EAAuB,CAAC;AACtB,MAAA,MADsB;AAEtB,MAAA,IAFsB;AAGtB,MAAA,OAHsB,EAAD;AAIjB;AACJ,WAAK,SAAL,CAAe;AACb,QAAA,IADa;AAEb,QAAA,MAFa,EAAf;AAGG;AACD,QAAA,OADC,EAHH;;AAMD,KAXD;AAYD,GAvFkD,C","file":"event-target-observer.js","sourcesContent":["import _ from 'lodash';\n\nimport {\n  Observer,\n  ReuseObserverCallbackFn\n} from './reuse-observer';\n\nexport class EventTargetObserver implements Observer {\n  _cb = undefined;\n\n  _cache = [] as {\n    target: Node;\n    type: string;\n    capture: AddEventListenerOptions['capture'];\n    listener: EventListener;\n  }[];\n\n  constructor(cb: ReuseObserverCallbackFn) {\n    this._cb = cb;\n  }\n\n  observe(\n    args: {\n      target: Node;\n      type: string;\n    },\n    options: AddEventListenerOptions = {}\n  ): void {\n    let {\n      target,\n      type\n    } = args;\n    let cacheEntry = _.find(this._cache, function(cacheEntry) {\n      return cacheEntry.target === target &&\n        cacheEntry.type === type &&\n        cacheEntry.capture === options.capture;\n    });\n    let isObserving = !_.isUndefined(cacheEntry);\n    if (isObserving) {\n      return;\n    }\n    let listener = (e: Event): void => {\n      let entries = [\n        e\n      ];\n      this._cb(entries);\n    };\n    target.addEventListener(type, listener, options);\n    this._cache.push({\n      target,\n      type,\n      capture: options.capture,\n      listener\n    });\n  }\n\n  unobserve(\n    args: {\n      target: Node;\n      type: string;\n    },\n    options: EventListenerOptions = {}\n  ): void {\n    let {\n      target,\n      type\n    } = args;\n    let cacheEntry = _.find(this._cache, function(cacheEntry) {\n      return cacheEntry.target === target &&\n        cacheEntry.type === type &&\n        cacheEntry.capture === options.capture;\n    });\n    let isObserving = !_.isUndefined(cacheEntry);\n    if (!isObserving) {\n      return;\n    }\n    target.removeEventListener(type, cacheEntry.listener, options);\n    // eslint-disable-next-line lodash/prefer-immutable-method\n    _.pull(this._cache, cacheEntry);\n  }\n\n  disconnect(): void {\n    _.forEach(this._cache, ({\n      target,\n      type,\n      capture\n    }) => {\n      this.unobserve({\n        type,\n        target\n      }, {\n        capture\n      });\n    });\n  }\n}\n"]}