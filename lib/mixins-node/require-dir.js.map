{"version":3,"sources":["../../src/mixins-node/require-dir.ts"],"names":[],"mappings":"uGAAA,wD;;AAEA;;;;;;;;;AASO,IAAI,UAAU,GAAG,UAAS,GAAT,EAAsB,MAAgC,GAAG;AAC/E,KAD+E;AAE/E,OAF+E;AAG/E,OAH+E,CAAzD;AAIV;AACZ,MAAI,gBAAE,OAAF,CAAU,MAAV,CAAJ,EAAuB;AACrB,QAAI,iBAAiB,GAAG,MAAxB;AACA,IAAA,MAAM,GAAG,UAAS,QAAT,EAA4B;AACnC,aAAO,gBAAE,QAAF,CAAW,iBAAX,EAA8B,IAAI,CAAC,OAAL,CAAa,QAAb,CAA9B,CAAP;AACD,KAFD;AAGD,GALD,MAKO,IAAI,gBAAE,QAAF,CAAW,MAAX,CAAJ,EAAwB;AAC7B,QAAI,EAAE,GAAG,MAAT;AACA,IAAA,MAAM,GAAG,UAAS,QAAT,EAA4B;AACnC,aAAO,EAAE,CAAC,IAAH,CAAQ,QAAR,CAAP;AACD,KAFD;AAGD,GALM,MAKA,IAAI,gBAAE,UAAF,CAAa,MAAb,CAAJ,EAA0B;AAC/B;AACD,GAFM,MAEA;AACL,UAAM,IAAI,KAAJ,CAAW,4BAA2B,OAAO,MAAO,IAApD,CAAN;AACD;;AAED;AACA;AACA,MAAI,GAAG,GAAG,IAAI,CAAC,SAAD,CAAd;;AAEA,MAAI,EAAE,GAAG,GAAG,CAAC,IAAD,CAAZ;AACA,MAAI,IAAI,GAAG,GAAG,CAAC,MAAD,CAAd;;AAEA,MAAI,KAAK,GAAG,EAAE,CAAC,WAAH,CAAe,GAAf,CAAZ;;AAEA,EAAA,KAAK,GAAG,gBAAE,MAAF,CAAS,KAAT,EAAgB,MAAhB,CAAR;;AAEA,EAAA,KAAK,GAAG,gBAAE,MAAF,CAAS,KAAT,CAAR;;AAEA,EAAA,KAAK,GAAG,gBAAE,GAAF,CAAM,KAAN,EAAa,UAAS,IAAT,EAAuB;AAC1C,WAAO,IAAI,CAAC,IAAL,CAAU,GAAV,EAAe,IAAf,CAAP;AACD,GAFO,CAAR;;AAIA,MAAI,OAAO,GAAG,gBAAE,GAAF,CAAM,KAAN,EAAa,UAAS,IAAT,EAAwB;AACjD,QAAI,QAAQ,GAAG,GAAG,CAAC,IAAD,CAAlB;AACA,WAAO,QAAP;AACD,GAHa,CAAd;;AAKA,SAAO,OAAP;AACD,CA5CM,C","file":"require-dir.js","sourcesContent":["import _ from 'lodash';\n\n/**\n * Part of `lodash-firecloud`.\n *\n * Require all Node.js modules in a directory.\n *\n * @param dir The directory.\n * @param filter The allowed extensions for 'require' or a filtering function.\n * @returns Returns an array of required modules.\n */\nexport let requireDir = function(dir: string, filter: string[]|RegExp|Function = [\n  '.js',\n  '.json',\n  '.node'\n]): unknown[] {\n  if (_.isArray(filter)) {\n    let requireExtensions = filter;\n    filter = function(filename): boolean {\n      return _.includes(requireExtensions, path.extname(filename));\n    };\n  } else if (_.isRegExp(filter)) {\n    let re = filter;\n    filter = function(filename): boolean {\n      return re.test(filename);\n    };\n  } else if (_.isFunction(filter)) {\n    // noop\n  } else {\n    throw new Error(`Unknown type for filter '${typeof filter}.'`);\n  }\n\n  // eval('require') is a trick for webpack to ignore bundling the module\n  // eslint-disable-next-line no-eval\n  let req = eval('require');\n\n  let fs = req('fs');\n  let path = req('path');\n\n  let files = fs.readdirSync(dir);\n\n  files = _.filter(files, filter);\n\n  files = _.sortBy(files);\n\n  files = _.map(files, function(file): string {\n    return path.join(dir, file);\n  });\n\n  let modules = _.map(files, function(file): unknown {\n    let getProps = req(file);\n    return getProps;\n  });\n\n  return modules;\n};\n"]}