{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":"+HAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,qV,+3BArBA,mB,CAEA;AAEA;AACA;AACA;AACO,IAAI,EAAE,GAAG,GAAT,C","file":"types.js","sourcesContent":["import * as _UT from 'utility-types';\n\nimport {\n  Fn\n} from './types-functions';\n\n\nexport interface Deferred<TValue> {\n\n  /**\n   * The internal promise.\n   */\n  promise: Promise<TValue>;\n\n  /**\n   * The state of the promise.\n   */\n  state: 'pending' | 'resolved' | 'rejected';\n\n  /**\n   * The resolve callback of the promise.\n   */\n  resolve: Fn<void, [TValue?]>;\n\n  /**\n   * The reject callback of the promise.\n   */\n  reject: Fn<void, [Error]>;\n\n  /**\n   * The value that the promise resolved with.\n   */\n  value?: TValue;\n\n  /**\n   * The error that the promise rejected with.\n   */\n  err?: Error;\n}\n\n// dump from @types/node\n/* eslint-disable jsdoc/require-description-complete-sentence */\nexport interface CallSite {\n\n  /**\n   * Value of \"this\"\n   */\n  getThis(): any;\n\n  /**\n   * Type of \"this\" as a string.\n   * This is the name of the function stored in the constructor field of\n   * \"this\", if available.  Otherwise the object's [[Class]] internal\n   * property.\n   */\n  getTypeName(): string | null;\n\n  /**\n   * Current function\n   */\n  getFunction(): Function | undefined;\n\n  /**\n   * Name of the current function, typically its name property.\n   * If a name property is not available an attempt will be made to try\n   * to infer a name from the function's context.\n   */\n  getFunctionName(): string | null;\n\n  /**\n   * Name of the property [of \"this\" or one of its prototypes] that holds\n   * the current function\n   */\n  getMethodName(): string | null;\n\n  /**\n   * Name of the script [if this function was defined in a script]\n   */\n  getFileName(): string | null;\n\n  /**\n   * Current line number [if this function was defined in a script]\n   */\n  getLineNumber(): number | null;\n\n  /**\n   * Current column number [if this function was defined in a script]\n   */\n  getColumnNumber(): number | null;\n\n  /**\n   * A call site object representing the location where eval was called\n   * [if this function was created using a call to eval]\n   */\n  getEvalOrigin(): string | undefined;\n\n  /**\n   * Is this a toplevel invocation, that is, is \"this\" the global object?\n   */\n  isToplevel(): boolean;\n\n  /**\n   * Does this call take place in code defined by a call to eval?\n   */\n  isEval(): boolean;\n\n  /**\n   * Is this call in native V8 code?\n   */\n  isNative(): boolean;\n\n  /**\n   * Is this a constructor call?\n   */\n  isConstructor(): boolean;\n}\n/* eslint-enable */\n\n// -----------------------------------------------------------------------------\n\n// https://github.com/piotrwitek/utility-types is a good library\n// but some types are not properly tested\n// e.g. Primitive didn't have undefined and null until 2019-10-21, since added in 2019-04-02\nexport let UT = _UT;\n\nexport * from './types-callbacks';\n\nexport * from './types-classes';\n\nexport * from './types-core';\n\nexport * from './types-functions';\n\nexport * from './types-json';\n\nexport * from './types-struct';\n\nexport * from './types-struct-keys';\n"]}